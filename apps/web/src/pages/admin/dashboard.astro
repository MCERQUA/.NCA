---
export const prerender = false; // Server-render this page for real-time data

import BaseLayout from '../../layouts/BaseLayout.astro';
import { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/Card';
import { Button } from '../../components/ui/Button';
import { db, contractors } from '../../db';
import { eq, desc } from 'drizzle-orm';

// Get all pending contractors
let pendingContractors: any[] = [];
let activeContractors: any[] = [];

try {
  [pendingContractors, activeContractors] = await Promise.all([
    db.select().from(contractors).where(eq(contractors.status, 'pending')).orderBy(desc(contractors.createdAt)),
    db.select().from(contractors).where(eq(contractors.status, 'active')).orderBy(desc(contractors.createdAt)).limit(10),
  ]);
} catch (error) {
  console.error('Error fetching contractors:', error);
}
---

<BaseLayout title="Admin Dashboard - NCA">
  <main class="min-h-screen bg-gray-50 py-8 px-4">
    <div class="container mx-auto max-w-7xl">
      <!-- Header -->
      <div class="mb-8 flex items-center justify-between">
        <div>
          <h1 class="text-4xl font-heading font-bold text-charcoal mb-2">
            Admin Dashboard
          </h1>
          <p class="text-slate">
            Review and approve contractor applications
          </p>
        </div>
        <button
          id="logout-btn"
          class="px-4 py-2 text-sm font-medium text-slate hover:text-charcoal transition-colors"
        >
          Sign Out
        </button>
      </div>

      <!-- Stats -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        <Card>
          <CardContent className="p-6">
            <div class="text-3xl font-bold text-primary mb-1">{pendingContractors.length}</div>
            <div class="text-sm text-slate">Pending Applications</div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-6">
            <div class="text-3xl font-bold text-green-600 mb-1">{activeContractors.length}</div>
            <div class="text-sm text-slate">Active Contractors</div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-6">
            <div class="text-3xl font-bold text-charcoal mb-1">{pendingContractors.length + activeContractors.length}</div>
            <div class="text-sm text-slate">Total Contractors</div>
          </CardContent>
        </Card>
      </div>

      <!-- Pending Applications -->
      <Card className="mb-8">
        <CardHeader>
          <CardTitle>Pending Applications ({pendingContractors.length})</CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          {pendingContractors.length === 0 ? (
            <div class="text-center py-12">
              <div class="text-6xl mb-4">✓</div>
              <h3 class="text-xl font-semibold text-charcoal mb-2">All caught up!</h3>
              <p class="text-slate">No pending applications to review</p>
            </div>
          ) : (
            <div class="space-y-4">
              {pendingContractors.map((contractor) => (
                <div class="border border-gray-200 rounded-lg p-6 hover:border-primary transition-colors">
                  <div class="flex items-start justify-between mb-4">
                    <div class="flex-1">
                      <h3 class="text-xl font-bold text-charcoal mb-1">
                        {contractor.businessName || contractor.name}
                      </h3>
                      <div class="flex items-center space-x-3 text-sm text-slate mb-3">
                        <span class="font-medium text-primary">{contractor.category}</span>
                        <span>•</span>
                        <span>{contractor.city}, {contractor.state}</span>
                        <span>•</span>
                        <span>{new Date(contractor.createdAt).toLocaleDateString()}</span>
                      </div>
                      <p class="text-slate mb-3">{contractor.description}</p>

                      <!-- Contact Info -->
                      <div class="grid grid-cols-1 md:grid-cols-3 gap-3 text-sm">
                        <div>
                          <span class="font-medium text-charcoal">Phone:</span>
                          <span class="text-slate ml-2">{contractor.phone}</span>
                        </div>
                        <div>
                          <span class="font-medium text-charcoal">Email:</span>
                          <span class="text-slate ml-2">{contractor.email}</span>
                        </div>
                        {contractor.website && (
                          <div>
                            <span class="font-medium text-charcoal">Website:</span>
                            <a href={contractor.website} target="_blank" class="text-primary ml-2 hover:underline">
                              View
                            </a>
                          </div>
                        )}
                      </div>

                      {/* Additional Details */}
                      <div class="mt-3 flex flex-wrap gap-4 text-sm">
                        {contractor.licenseNumber && (
                          <div>
                            <span class="font-medium text-charcoal">License:</span>
                            <span class="text-slate ml-2">{contractor.licenseNumber}</span>
                          </div>
                        )}
                        {contractor.yearsInBusiness && (
                          <div>
                            <span class="font-medium text-charcoal">Experience:</span>
                            <span class="text-slate ml-2">{contractor.yearsInBusiness} years</span>
                          </div>
                        )}
                        {contractor.specialties && contractor.specialties.length > 0 && (
                          <div class="w-full mt-2">
                            <span class="font-medium text-charcoal">Specialties:</span>
                            <div class="flex flex-wrap gap-2 mt-1">
                              {contractor.specialties.map((specialty: string) => (
                                <span class="px-2 py-1 text-xs bg-primary/10 text-primary rounded">
                                  {specialty}
                                </span>
                              ))}
                            </div>
                          </div>
                        )}
                      </div>
                    </div>
                  </div>

                  <!-- Action Buttons -->
                  <div class="flex gap-3 pt-4 border-t">
                    <button
                      class="approve-btn flex-1 bg-green-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-green-700 transition-colors"
                      data-id={contractor.id}
                    >
                      Approve
                    </button>
                    <button
                      class="reject-btn flex-1 bg-red-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-red-700 transition-colors"
                      data-id={contractor.id}
                    >
                      Reject
                    </button>
                  </div>
                </div>
              ))}
            </div>
          )}
        </CardContent>
      </Card>

      <!-- Recently Approved -->
      <Card>
        <CardHeader>
          <CardTitle>Recently Approved (Last 10)</CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          <div class="space-y-3">
            {activeContractors.map((contractor) => (
              <div class="flex items-center justify-between py-3 border-b last:border-0">
                <div class="flex-1">
                  <h4 class="font-semibold text-charcoal">{contractor.businessName || contractor.name}</h4>
                  <p class="text-sm text-slate">{contractor.category} • {contractor.city}, {contractor.state}</p>
                </div>
                <a href={`/contractor/${contractor.id}`} target="_blank">
                  <Button client:load variant="outline" size="sm">
                    View Profile
                  </Button>
                </a>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  </main>

  <script>
    // Auth check
    if (!sessionStorage.getItem('admin_authenticated')) {
      window.location.href = '/admin/login';
    }

    // Logout
    document.getElementById('logout-btn')?.addEventListener('click', () => {
      sessionStorage.removeItem('admin_authenticated');
      window.location.href = '/admin/login';
    });

    // Approve contractor
    document.querySelectorAll('.approve-btn').forEach(btn => {
      btn.addEventListener('click', async () => {
        const button = btn as HTMLButtonElement;
        const id = button.getAttribute('data-id');
        if (!confirm('Approve this contractor? They will be visible on the site immediately.')) return;

        button.disabled = true;
        button.textContent = 'Approving...';

        try {
          const response = await fetch('/api/admin/approve-contractor', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id }),
          });

          if (response.ok) {
            window.location.reload();
          } else {
            alert('Error approving contractor');
            button.disabled = false;
            button.textContent = 'Approve';
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error approving contractor');
          button.disabled = false;
          button.textContent = 'Approve';
        }
      });
    });

    // Reject contractor
    document.querySelectorAll('.reject-btn').forEach(btn => {
      btn.addEventListener('click', async () => {
        const button = btn as HTMLButtonElement;
        const id = button.getAttribute('data-id');
        if (!confirm('Reject this contractor? This will delete their application.')) return;

        button.disabled = true;
        button.textContent = 'Rejecting...';

        try {
          const response = await fetch('/api/admin/reject-contractor', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id }),
          });

          if (response.ok) {
            window.location.reload();
          } else {
            alert('Error rejecting contractor');
            button.disabled = false;
            button.textContent = 'Reject';
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error rejecting contractor');
          button.disabled = false;
          button.textContent = 'Reject';
        }
      });
    });
  </script>
</BaseLayout>
